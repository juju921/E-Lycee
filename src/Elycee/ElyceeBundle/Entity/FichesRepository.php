<?php

namespace Elycee\ElyceeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FichesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FichesRepository extends EntityRepository
{


    public function getCountFiches(){
        $results = $this
            ->createQueryBuilder('p')
            ->select('count(p)')
            ->getQuery()
            ->getSingleScalarResult();
        return $results;


    }

    public function getThreeLastFiches(){
        $results = $this
            ->createQueryBuilder('p')
            ->setMaxResults(3)
            ->getQuery()
            ->getResult();
        return $results;
    }


    public function persistQuestions($questions,$qcm)
    {
        foreach ($questions as $question) {
            $question->setFiche($qcm);
            foreach ($question->getChoices() as $choice) {
                //$choice->setFiche($qcm);
                $choice->setQuestion($question);

            }

            $this->getEntityManager()->persist($question);
            //echo  dump($question);exit;
            $this->getEntityManager()->flush();
        }
    }


    public function gettheFiches()
    {

        $results = $this
            ->createQueryBuilder('p')
            ->join('p.classes','f')
            ->join('p.status','status')
          //  ->where('f.class_level  =  \'premiere\' ')
            ->andWhere('status.nom = \'publish\'')
            ->getQuery()
            ->getResult();
        return $results;

    }


    public  function getfichebyuser($iduser)
    {
        $results = $this
            ->createQueryBuilder('p')
            ->select('p.title')
            ->where(':teacher_id   = :iduser')
            ->setParameter(':id',$iduser)
            ->getQuery()
            ->getResult();
        echo $results;
        return $results ;
    }


    public function updateQcm($request,$form,$qcmStatus){
        $em = $this->getEntityManager();
        $qcm = $form->getData();
        $published = $form->get('publish')->getData();
        if($published){

            $qcm->setStatus('publish');
            $em->getRepository('ElyceeElyceeBundle:Scores')->generateScores($qcm);
        }
        if($qcmStatus == 'publish' && !$published)
            $qcm->setStatus('publish');
        foreach($qcm->getQuestions() as $key1 => $question)
            foreach ($question->getChoices() as $key2 => $choice) {
                if ($choice->getContentChoice() == '') return ['status' => 'error','content' => 'Les réponses ne peuvent pas être vides !'];
                ($key2 + 1 == $request->get('reponse' . ($key1 + 1))) ? $choice->setStatus('yes') : $choice->setStatus('no');
            }
        $em->persist($qcm);
        $em->flush();
        return ['status' => 'success','content' => 'Le QCM a été mis à jour !'];
    }



}
